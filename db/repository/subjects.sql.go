// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: subjects.sql

package repository

import (
	"context"
)

const createSubject = `-- name: CreateSubject :exec
INSERT INTO subjects (title)
VALUES ($1)
`

func (q *Queries) CreateSubject(ctx context.Context, title string) error {
	_, err := q.db.Exec(ctx, createSubject, title)
	return err
}

const getSubjects = `-- name: GetSubjects :many
SELECT id, title FROM subjects
`

func (q *Queries) GetSubjects(ctx context.Context) ([]Subject, error) {
	rows, err := q.db.Query(ctx, getSubjects)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Subject
	for rows.Next() {
		var i Subject
		if err := rows.Scan(&i.ID, &i.Title); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
